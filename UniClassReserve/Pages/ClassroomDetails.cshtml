@page "{id:int}"
@model UniClassReserve.Pages.ClassroomDetailsModel
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@inject SignInManager<UniClassReserve.Data.ApplicationUser> SignInManager
@inject UserManager<UniClassReserve.Data.ApplicationUser> UserManager
@attribute [Authorize(Roles = "Admin")]
@{
    var user = UserManager.GetUserAsync(User).Result;
    var roles = user != null ? UserManager.GetRolesAsync(user).Result : new List<string>();
    bool isInstructor = roles.Contains("Instructor");
}

<!-- Bootstrap Icons CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

@section Scripts {
<script>
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });
</script>
}

<h2 class="mb-4"><i class="bi bi-door-open-fill me-2"></i>Classroom Details</h2>
@if (Model.Classroom == null)
{
    <div class="alert alert-danger">Classroom not found.</div>
}
else
{
    <div class="row mb-4">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body">
                    <h3>@Model.Classroom.Name <span class="badge @(Model.Classroom.IsActive ? "bg-success" : "bg-secondary") ms-2"><i class="bi @(Model.Classroom.IsActive ? "bi-check-circle-fill" : "bi-x-circle-fill") me-1"></i>@(Model.Classroom.IsActive ? "Active" : "Inactive")</span></h3>
                    <p class="mb-1 text-muted">Capacity: @Model.Classroom.Capacity</p>
                    <p class="mb-2">@Model.Classroom.Description</p>
                    <div class="mt-3">
                        <span class="fw-bold">Average Feedback:</span>
                        @if (Model.Feedbacks.Any())
                        {
                            var avg = Model.Feedbacks.Average(f => f.Rating);
                            <span class="ms-2 fs-5 badge bg-info text-dark"><i class="bi bi-star-fill me-1"></i>@avg.ToString("0.0")</span>
                        }
                        else
                        {
                            <span class="text-muted"><i class="bi bi-star"></i> No feedback yet.</span>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm bg-body-secondary text-body">
                <div class="card-body">
                    <h6 class="card-title"><i class="bi bi-bar-chart"></i> Statistics</h6>
                    <ul class="list-unstyled mb-0">
                        <li><i class="bi bi-people"></i> <b>Total Reservations:</b> @Model.Reservations.Count</li>
                        @{
                            var mostUsedDay = Model.WeeklySchedule.OrderByDescending(d => d.Slots.Count).FirstOrDefault();
                        }
                        <li><i class="bi bi-calendar-week"></i> <b>Most Used Day:</b> @(mostUsedDay != null ? mostUsedDay.DayName : "-")</li>
                        @{
                            var allSlots = Model.WeeklySchedule.SelectMany(d => d.Slots).ToList();
                            var mostUsedSlot = allSlots.GroupBy(s => s.TimeRange).OrderByDescending(g => g.Count()).FirstOrDefault();
                        }
                        <li><i class="bi bi-clock-history"></i> <b>Most Used Slot:</b> @(mostUsedSlot != null ? mostUsedSlot.Key : "-")</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="mb-4">
        <h5><i class="bi bi-calendar-week me-2"></i>Weekly Schedule</h5>
        <div class="table-responsive">
        <table class="table table-bordered text-center align-middle">
            <thead>
                <tr>
                    <th><i class="bi bi-calendar-week me-1"></i>Day</th>
                    <th><i class="bi bi-clock me-1"></i>Time Slots</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var day in Model.WeeklySchedule)
            {
                var isToday = DateTime.Now.DayOfWeek.ToString() == day.DayName;
                <tr class="@(isToday ? "table-primary" : "")">
                    <td class="fw-bold">@day.DayName</td>
                    <td>
                        @if (day.Slots.Any())
                        {
                            @foreach (var slot in day.Slots)
                            {
                                var badgeClass = slot.Type == "Holiday" ? "bg-secondary" : slot.Type == "Conflict" ? "bg-danger" : "bg-info";
                                var icon = slot.Type == "Holiday" ? "bi bi-calendar-x" : slot.Type == "Conflict" ? "bi bi-exclamation-triangle" : "bi bi-clock";
                                <span class="badge @badgeClass me-1" data-bs-toggle="tooltip" title="@slot.Tooltip">
                                    <i class="@icon"></i> @slot.TimeRange
                                </span>
                            }
                        }
                        else
                        {
                            <span class="text-muted"><i class="bi bi-calendar-x"></i> No reservation</span>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
        </div>
    </div>
    <div class="d-flex justify-content-between align-items-center mb-2">
        <h5 class="d-flex align-items-center"><i class="bi bi-chat-left-dots-fill me-2"></i>All Feedbacks</h5>
        <div>
            <form method="get" class="d-inline">
                <select name="sort" class="form-select form-select-sm d-inline w-auto" onchange="this.form.submit()">
                    <option value="date_desc">Newest</option>
                    <option value="date_asc">Oldest</option>
                    <option value="rating_desc">Highest Rated</option>
                    <option value="rating_asc">Lowest Rated</option>
                </select>
            </form>
            @if (isInstructor)
            {
                <button class="btn btn-primary btn-sm ms-2 d-flex align-items-center" data-bs-toggle="modal" data-bs-target="#feedbackModal">
                    <i class="bi bi-star me-1"></i> Leave Feedback
                </button>
            }
        </div>
    </div>
    <!-- Feedback Modal -->
    <div class="modal fade" id="feedbackModal" tabindex="-1" aria-labelledby="feedbackModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <form method="post" asp-page-handler="LeaveFeedback">
            <div class="modal-header">
              <h5 class="modal-title d-flex align-items-center" id="feedbackModalLabel"><i class="bi bi-star-fill me-2"></i>Leave Feedback</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="mb-3">
                <label class="form-label">Rating</label>
                <div id="starRating" class="mb-2">
                  @for (int i = 1; i <= 5; i++)
                  {
                      <input type="radio" class="btn-check" name="Rating" id="star@i" value="@i" autocomplete="off">
                      <label class="btn btn-outline-warning" for="star@i">★</label>
                  }
                </div>
              </div>
              <div class="mb-3">
                <label class="form-label">Comment</label>
                <textarea class="form-control" name="Comment" rows="3" maxlength="250" required></textarea>
              </div>
              <input type="hidden" name="ClassroomId" value="@Model.Classroom?.Id" />
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="submit" class="btn btn-primary">Submit</button>
            </div>
          </form>
        </div>
      </div>
    </div>
    @if (Model.Feedbacks.Any())
    {
        <div class="row row-cols-1 row-cols-md-2 g-3">
            @foreach (var f in Model.Feedbacks)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-2">
                                <span class="me-2"><i class="bi bi-person-circle" style="font-size:1.5em;"></i></span>
                                <span class="fw-bold">@f.User?.Email ?? "-"</span>
                                <span class="badge bg-secondary ms-2">@f.Term?.Name</span>
                            </div>
                            <div>
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= f.Rating) { <span style="color:gold">★</span>; } else { <span style="color:#ccc">★</span>; }
                                }
                            </div>
                            <p class="mt-2">@f.Comment</p>
                        </div>
                        <div class="card-footer text-end text-muted small">@f.CreatedAt.ToShortDateString()</div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <span class="text-muted"><i class="bi bi-chat-dots"></i> No feedback yet.</span>
    }
} 