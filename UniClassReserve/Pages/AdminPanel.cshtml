@page
@model UniClassReserve.Pages.AdminPanelModel
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]
<h2 class="mb-4"><i class="bi bi-shield-lock-fill me-2"></i>Admin Panel</h2>
@if (!string.IsNullOrEmpty(Model.ResultMessage))
{
    <div class="alert alert-info d-flex align-items-center" role="alert">
        <i class="bi bi-info-circle-fill me-2"></i>
        <div>@Model.ResultMessage</div>
    </div>
}
@if (!ViewData.ModelState.IsValid)
{
    <ul class="text-danger">
    @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
    {
        <li><i class="bi bi-exclamation-triangle-fill me-1"></i>@modelError.ErrorMessage</li>
    }
    </ul>
}
<p class="text-muted"><i class="bi bi-person-lock me-1"></i>Only users with the Admin role can view this page.</p>

<!-- Add User Button -->
<button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#addUserModal">
    <i class="bi bi-person-plus-fill me-1"></i>Add New User
</button>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-primary text-white">
        <h5 class="modal-title" id="addUserModalLabel"><i class="bi bi-person-plus-fill me-2"></i>Add New User</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form id="addUserForm" method="post" novalidate>
        <div class="modal-body">
          <div asp-validation-summary="All" class="text-danger mb-2"></div>
          <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="Email" required maxlength="50" placeholder="user@example.com" />
            <div class="invalid-feedback">Valid email is required.</div>
          </div>
          <div class="mb-3">
            <label for="password" class="form-label">Password</label>
            <input type="password" class="form-control" id="password" name="Password" maxlength="30" placeholder="Leave blank to auto-generate a strong password" />
            <small class="text-muted">Leave blank to auto-generate a strong password.</small>
          </div>
          <div class="mb-3">
            <label for="role" class="form-label">Role</label>
            <select class="form-select" id="role" name="Role" required>
              <option value="">Select role...</option>
              <option value="Instructor">Instructor</option>
              <option value="Admin">Admin</option>
            </select>
            <div class="invalid-feedback">Role is required.</div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="bi bi-x-lg me-1"></i>Close</button>
          <button type="button" class="btn btn-primary" id="addUserSubmitBtn"><i class="bi bi-person-plus-fill me-1"></i>Add</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Bulk Email Form (Klasik, Modal Yok) -->
<form method="post" asp-page-handler="BulkEmail" id="bulkEmailForm" class="mb-3">
    <input type="hidden" name="BulkEmailTo" id="bulkEmailToInput" />
    <div class="row g-2 align-items-end">
        <div class="col-auto">
            <textarea class="form-control" id="bulkEmailMessage" name="BulkEmailMessage" rows="2" required placeholder="Type your message..."></textarea>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-info" id="bulkEmailSendBtn" disabled><i class="bi bi-envelope-fill me-1"></i>Send Bulk Email</button>
        </div>
    </div>
</form>

@functions {
    public List<(string UserName, string Email, string Roles)> UsersWithRoles { get; set; } = new();
}

@if (Model.UsersWithRoles != null && Model.UsersWithRoles.Count > 0)
{
    <h4 class="mt-4 mb-2"><i class="bi bi-people-fill me-2"></i>Current Users</h4>
    <div class="table-responsive">
    <table class="table table-bordered table-hover align-middle text-center">
        <thead class="table-light">
            <tr>
                <th><input type="checkbox" id="selectAllInstructors" /></th>
                <th>Username</th>
                <th>Email</th>
                <th>Roles</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        @for (int i = 0; i < Model.UsersWithRoles.Count; i++)
        {
            var user = Model.UsersWithRoles[i];
            <tr>
                <td>
                    @if (user.Roles.Contains("Instructor"))
                    {
                        <input type="checkbox" class="instructor-checkbox" value="@user.Email" />
                    }
                </td>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>
                    @foreach (var role in user.Roles.Split(", "))
                    {
                        <span class="badge bg-secondary me-1"><i class="bi bi-person-badge me-1"></i>@role</span>
                    }
                </td>
                <td>
                    <form class="deleteUserForm d-inline" method="post" asp-page-handler="DeleteUser" asp-route-email="@user.Email">
                        <button type="submit" class="btn btn-sm btn-danger"><i class="bi bi-trash-fill me-1"></i>Delete</button>
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>
    </div>
}

<!-- Terms List and Management -->
<h4 class="mt-4 mb-2"><i class="bi bi-calendar2-week-fill me-2"></i>Terms</h4>
<div class="table-responsive">
<table class="table table-bordered table-hover align-middle text-center">
    <thead class="table-light">
        <tr>
            <th>Name</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var term in Model.Terms)
    {
        <tr>
            <td>@term.Name</td>
            <td>@term.StartDate.ToShortDateString()</td>
            <td>@term.EndDate.ToShortDateString()</td>
            <td>
                <button class="btn btn-sm btn-warning me-1" data-bs-toggle="modal" data-bs-target="#editTermModal@(term.Id)"><i class="bi bi-pencil-square me-1"></i>Edit</button>
                <form method="post" asp-page-handler="DeleteTerm" asp-route-id="@term.Id" style="display:inline">
                    <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this term?')"><i class="bi bi-trash-fill me-1"></i>Delete</button>
                </form>
                <!-- Edit Modal -->
                <div class="modal fade" id="editTermModal@(term.Id)" tabindex="-1" aria-labelledby="editTermModalLabel@(term.Id)" aria-hidden="true">
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header bg-warning text-dark">
                        <h5 class="modal-title" id="editTermModalLabel@(term.Id)"><i class="bi bi-pencil-square me-2"></i>Edit Term</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <form id="editTermForm-@term.Id" method="post" asp-page-handler="EditTerm">
                        <div class="modal-body">
                          <input type="hidden" name="Id" value="@term.Id" />
                          <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" name="Name" value="@term.Name" required />
                          </div>
                          <div class="mb-3">
                            <label class="form-label">Start Date</label>
                            <input type="date" class="form-control" name="StartDate" value="@term.StartDate.ToString("yyyy-MM-dd")" required />
                          </div>
                          <div class="mb-3">
                            <label class="form-label">End Date</label>
                            <input type="date" class="form-control" name="EndDate" value="@term.EndDate.ToString("yyyy-MM-dd")" required />
                          </div>
                        </div>
                        <div class="modal-footer">
                          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="bi bi-x-lg me-1"></i>Close</button>
                          <button type="button" class="btn btn-primary editTermSubmitBtn" data-term-id="@term.Id"><i class="bi bi-save2-fill me-1"></i>Save</button>
                        </div>
                      </form>
                    </div>
                  </div>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
</div>
<!-- Add New Term Button and Modal -->
<button type="button" class="btn btn-success mb-2" data-bs-toggle="modal" data-bs-target="#addTermModal">
    <i class="bi bi-plus-circle-fill me-1"></i>Add New Term
</button>
<div class="modal fade" id="addTermModal" tabindex="-1" aria-labelledby="addTermModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-success text-white">
        <h5 class="modal-title" id="addTermModalLabel"><i class="bi bi-plus-circle-fill me-2"></i>Add New Term</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form id="addTermForm" method="post" asp-page-handler="AddTerm">
        <div class="modal-body">
          <div class="mb-3">
            <label class="form-label">Name</label>
            <input type="text" class="form-control" name="Name" required />
          </div>
          <div class="mb-3">
            <label class="form-label">Start Date</label>
            <input type="date" class="form-control" name="StartDate" required />
          </div>
          <div class="mb-3">
            <label class="form-label">End Date</label>
            <input type="date" class="form-control" name="EndDate" required />
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="bi bi-x-lg me-1"></i>Close</button>
          <button type="button" class="btn btn-primary" id="addTermSubmitBtn"><i class="bi bi-plus-circle-fill me-1"></i>Add</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Classroom List and Management -->
<h4 class="mt-4 mb-2"><i class="bi bi-door-open-fill me-2"></i>Classrooms</h4>
<div class="table-responsive">
<table class="table table-bordered table-hover align-middle text-center">
    <thead class="table-light">
        <tr>
            <th>Name</th>
            <th>Capacity</th>
            <th>Description</th>
            <th>Active</th>
            <th>Avg. Rating</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var classroom in Model.Classrooms)
    {
        var feedbacks = Model.AllFeedbacks.Where(f => f.ClassroomId == classroom.Id && f.User != null && !f.User.IsDeleted).ToList();
        double avgRating = feedbacks.Any() ? feedbacks.Average(f => f.Rating) : 0;
        <tr>
            <td>@classroom.Name</td>
            <td>@classroom.Capacity</td>
            <td>@classroom.Description</td>
            <td>
                @if (classroom.IsActive)
                {
                    <span class="badge bg-success"><i class="bi bi-check-circle-fill me-1"></i>Active</span>
                }
                else
                {
                    <span class="badge bg-secondary"><i class="bi bi-x-circle-fill me-1"></i>Inactive</span>
                }
            </td>
            <td>
                @if (feedbacks.Any())
                {
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= Math.Round(avgRating)) { <span style="color:gold">★</span>; } else { <span style="color:#ccc">★</span>; }
                    }
                    <span class="ms-2 badge bg-info text-dark"><i class="bi bi-star-fill me-1"></i>@avgRating.ToString("0.0")</span>
                }
                else
                {
                    <span class="text-muted">No feedback</span>
                }
            </td>
            <td>
                <a class="btn btn-info btn-sm me-1" asp-page="/ClassroomDetails" asp-route-id="@classroom.Id"><i class="bi bi-info-circle-fill me-1"></i>Details</a>
                <button class="btn btn-sm btn-warning me-1" data-bs-toggle="modal" data-bs-target="#editClassroomModal-@classroom.Id"><i class="bi bi-pencil-square me-1"></i>Edit</button>
                <form class="deleteClassroomForm" method="post" asp-page-handler="DeleteClassroom" asp-route-id="@classroom.Id" style="display:inline">
                    <input type="hidden" name="id" value="@classroom.Id" />
                    <button type="submit" class="btn btn-sm btn-danger" data-classroom-id="@classroom.Id"><i class="bi bi-trash-fill me-1"></i>Delete</button>
                </form>
                <!-- Edit Modal (unique id for each classroom) -->
                <div class="modal fade" id="editClassroomModal-@classroom.Id" tabindex="-1" aria-labelledby="editClassroomModalLabel-@classroom.Id" aria-hidden="true">
                  <div class="modal-dialog">
                    <div class="modal-content">
                      <div class="modal-header bg-warning text-dark">
                        <h5 class="modal-title" id="editClassroomModalLabel-@classroom.Id"><i class="bi bi-pencil-square me-2"></i>Edit Classroom</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <form id="editClassroomForm-@classroom.Id" method="post" asp-page-handler="EditClassroom">
                        <div class="modal-body">
                          <input type="hidden" name="Id" value="@classroom.Id" />
                          <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" name="Name" value="@classroom.Name" required />
                          </div>
                          <div class="mb-3">
                            <label class="form-label">Capacity</label>
                            <input type="number" class="form-control" name="Capacity" value="@classroom.Capacity" min="1" required />
                          </div>
                          <div class="mb-3">
                            <label class="form-label">Description</label>
                            <input type="text" class="form-control" name="Description" value="@classroom.Description" />
                          </div>
                          <div class="mb-3">
                            <label class="form-label">Active</label>
                            <select class="form-select" name="IsActive">
                                @if (classroom.IsActive)
                                {
                                    <option value="true" selected>Active</option>
                                    <option value="false">Inactive</option>
                                }
                                else
                                {
                                    <option value="true">Active</option>
                                    <option value="false" selected>Inactive</option>
                                }
                            </select>
                          </div>
                        </div>
                        <div class="modal-footer">
                          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="bi bi-x-lg me-1"></i>Close</button>
                          <button type="button" class="btn btn-primary editClassroomSubmitBtn" data-classroom-id="@classroom.Id"><i class="bi bi-save2-fill me-1"></i>Save</button>
                        </div>
                      </form>
                    </div>
                  </div>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
</div>
<!-- Add New Classroom Button and Modal -->
<button type="button" class="btn btn-success mb-2" data-bs-toggle="modal" data-bs-target="#addClassroomModal">
    <i class="bi bi-plus-circle-fill me-1"></i>Add New Classroom
</button>
<div class="modal fade" id="addClassroomModal" tabindex="-1" aria-labelledby="addClassroomModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header bg-success text-white">
        <h5 class="modal-title" id="addClassroomModalLabel"><i class="bi bi-plus-circle-fill me-2"></i>Add New Classroom</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form id="addClassroomForm" method="post" asp-page-handler="AddClassroom">
        <div class="modal-body">
          <div class="mb-3">
            <label class="form-label">Name</label>
            <input type="text" class="form-control" name="Name" required />
          </div>
          <div class="mb-3">
            <label class="form-label">Capacity</label>
            <input type="number" class="form-control" name="Capacity" min="1" required />
          </div>
          <div class="mb-3">
            <label class="form-label">Description</label>
            <input type="text" class="form-control" name="Description" />
          </div>
          <div class="mb-3">
            <label class="form-label">Active</label>
            <select class="form-select" name="IsActive">
                <option value="true" selected>Active</option>
                <option value="false">Inactive</option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="bi bi-x-lg me-1"></i>Close</button>
          <button type="submit" class="btn btn-primary"><i class="bi bi-plus-circle-fill me-1"></i>Add</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Reservation Requests -->
<h4>Reservation Requests</h4>
<div class="table-responsive">
<table class="table table-bordered align-middle text-center">
    <thead class="table-light">
        <tr>
            <th>Classroom</th>
            <th>User</th>
            <th>Term</th>
            <th>Day</th>
            <th>Reservation Date</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Start</th>
            <th>End</th>
            <th>Status</th>
            <th>Note</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var r in Model.AllReservations)
    {
        <tr>
            <td>@(r.Classroom?.Name ?? "-")</td>
            <td>@(r.User?.Email ?? "-")</td>
            <td>@(r.Term?.Name ?? "-")</td>
            <td>@((DayOfWeek)r.DayOfWeek)</td>
            <td>@r.StartTime.ToString("dd.MM.yyyy dddd", System.Globalization.CultureInfo.InvariantCulture)</td>
            <td>@r.StartDate.ToShortDateString()</td>
            <td>@r.EndDate.ToShortDateString()</td>
            <td>@r.StartTime.ToString("HH:mm")</td>
            <td>@r.EndTime.ToString("HH:mm")</td>
            <td>
                @if (r.Status == "Pending")
                {
                    <span class="badge bg-warning text-dark">Pending</span>
                }
                else if (r.Status == "Approved")
                {
                    <span class="badge bg-success">Approved</span>
                }
                else if (r.Status == "Rejected")
                {
                    <span class="badge bg-danger">Rejected</span>
                }
                else
                {
                    <span class="badge bg-secondary">@r.Status</span>
                }
            </td>
            <td>@r.AdminNote</td>
            <td>
                <form method="post" asp-page-handler="ApproveReservation" asp-route-id="@r.Id" style="display:inline">
                    <button type="submit" class="btn btn-sm btn-success" @(r.Status != "Pending" ? "disabled" : null)>Approve</button>
                </form>
                <form method="post" asp-page-handler="RejectReservation" asp-route-id="@r.Id" style="display:inline">
                    <button type="submit" class="btn btn-sm btn-danger" @(r.Status != "Pending" ? "disabled" : null)>Reject</button>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>
</div>

<h4 class="mt-4">Reservation Groups (Batch)</h4>
<div class="table-responsive">
<table class="table table-bordered align-middle text-center">
    <thead class="table-light">
        <tr>
            <th>User</th>
            <th>Classroom</th>
            <th>Term</th>
            <th>Day</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Count</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var g in Model.ReservationAdminGroups)
    {
        var userEmail = g.UserEmail ?? "(Deleted User)";
        <tr>
            <td>@userEmail</td>
            <td>@g.ClassroomName</td>
            <td>@g.TermName</td>
            <td>@((DayOfWeek)g.DayOfWeek)</td>
            <td>@g.StartDate.ToShortDateString()</td>
            <td>@g.EndDate.ToShortDateString()</td>
            <td>@g.Count</td>
            <td>
                @if (g.Status == "Pending")
                {
                    <span class="badge bg-warning text-dark">Pending</span>
                }
                else if (g.Status == "Approved")
                {
                    <span class="badge bg-success">Approved</span>
                }
                else if (g.Status == "Rejected")
                {
                    <span class="badge bg-danger">Rejected</span>
                }
                else
                {
                    <span class="badge bg-secondary">@g.Status</span>
                }
            </td>
            <td>
                <form method="post" asp-page-handler="ApproveReservationGroup" asp-route-groupId="@g.GroupId" style="display:inline">
                    <button type="submit" class="btn btn-sm btn-success" @(g.Status != "Pending" ? "disabled" : null)>Approve All</button>
                </form>
                <form method="post" asp-page-handler="RejectReservationGroup" asp-route-groupId="@g.GroupId" style="display:inline">
                    <button type="submit" class="btn btn-sm btn-danger" @(g.Status != "Pending" ? "disabled" : null)>Reject All</button>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>
</div>

<!-- Feedbacks Section -->
<h4 class="mt-4">All Feedbacks</h4>
<!-- Feedback Sayfalama ve Filtreleme Alanı -->
<form method="get" class="row g-2 align-items-end mb-3">
    <div class="col-auto">
        <label class="form-label mb-0">Rating</label>
        <select class="form-select" name="FeedbackRating">
            <option value="">All</option>
            @for (int i = 1; i <= 5; i++)
            {
                if (Model.FeedbackRating == i) { <option value="@i" selected>@i</option>; } else { <option value="@i">@i</option>; }
            }
        </select>
    </div>
    <div class="col-auto">
        <label class="form-label mb-0">Start Date</label>
        <input type="date" class="form-control" name="FeedbackStartDate" value="@(Model.FeedbackStartDate?.ToString("yyyy-MM-dd") ?? "")" />
    </div>
    <div class="col-auto">
        <label class="form-label mb-0">End Date</label>
        <input type="date" class="form-control" name="FeedbackEndDate" value="@(Model.FeedbackEndDate?.ToString("yyyy-MM-dd") ?? "")" />
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Filter</button>
    </div>
</form>
@if (Model.FeedbackTotalPages > 1)
{
    <nav aria-label="Feedback page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.FeedbackPage == 1 ? "disabled" : null)">
                <a class="page-link" href="?FeedbackPage=@(Model.FeedbackPage-1)&FeedbackRating=@Model.FeedbackRating&FeedbackStartDate=@Model.FeedbackStartDate:yyyy-MM-dd&FeedbackEndDate=@Model.FeedbackEndDate:yyyy-MM-dd">Previous</a>
            </li>
            @for (int i = 1; i <= Model.FeedbackTotalPages; i++)
            {
                <li class="page-item @(Model.FeedbackPage == i ? "active" : null)">
                    <a class="page-link" href="?FeedbackPage=@i&FeedbackRating=@Model.FeedbackRating&FeedbackStartDate=@Model.FeedbackStartDate:yyyy-MM-dd&FeedbackEndDate=@Model.FeedbackEndDate:yyyy-MM-dd">@i</a>
                </li>
            }
            <li class="page-item @(Model.FeedbackPage == Model.FeedbackTotalPages ? "disabled" : null)">
                <a class="page-link" href="?FeedbackPage=@(Model.FeedbackPage+1)&FeedbackRating=@Model.FeedbackRating&FeedbackStartDate=@Model.FeedbackStartDate:yyyy-MM-dd&FeedbackEndDate=@Model.FeedbackEndDate:yyyy-MM-dd">Next</a>
            </li>
        </ul>
    </nav>
}
<div class="table-responsive">
<table class="table table-bordered align-middle text-center">
    <thead class="table-light">
        <tr>
            <th>Classroom</th>
            <th>Term</th>
            <th>User</th>
            <th>Rating</th>
            <th>Comment</th>
            <th>Date</th>
            <th>Read</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var f in Model.AllFeedbacks)
    {
        var userEmail = f.User != null && !(f.User.IsDeleted) ? f.User.Email : "(Deleted User)";
        <tr>
            <td>@(f.Classroom?.Name ?? "-")</td>
            <td>@(f.Term != null ? f.Term.Name + " (" + f.Term.StartDate.ToShortDateString() + " - " + f.Term.EndDate.ToShortDateString() + ")" : "-")</td>
            <td>@userEmail</td>
            <td>
                @for (int i = 1; i <= 5; i++)
                {
                    if (i <= f.Rating) { <span style="color:gold">★</span>; } else { <span style="color:#ccc">★</span>; }
                }
            </td>
            <td>@f.Comment</td>
            <td>@f.CreatedAt.ToShortDateString()</td>
            <td>
                <form method="post" asp-page-handler="MarkFeedbackRead" asp-route-id="@f.Id" style="display:inline">
                    <input type="checkbox" name="IsRead" value="true" onchange="this.form.submit()" @(f.IsRead ? "checked" : null) />
                </form>
                <form method="post" asp-page-handler="DeleteFeedback" asp-route-id="@f.Id" style="display:inline">
                    <button type="submit" class="btn btn-sm btn-danger ms-2" onclick="return confirm('Are you sure you want to delete this feedback?')">Delete</button>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>
</div>

<h4 class="mt-4">Conflicting Reservations</h4>
@if (Model.ConflictingReservations != null && Model.ConflictingReservations.Count > 0)
{
    <div class="table-responsive">
    <table class="table table-bordered align-middle text-center">
        <thead class="table-danger">
            <tr>
                <th>User</th>
                <th>Classroom</th>
                <th>Term</th>
                <th>Day</th>
                <th>Start</th>
                <th>End</th>
                <th>Conflicts With (User)</th>
                <th>Conflicting Start</th>
                <th>Conflicting End</th>
                <th>Overlap</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var c in Model.ConflictingReservations)
        {
            <tr class="table-danger">
                <td>@(c.Reservation.User?.Email ?? "-")</td>
                <td>@(c.Reservation.Classroom?.Name ?? "-")</td>
                <td>@(c.Reservation.Term?.Name ?? "-")</td>
                <td>@((DayOfWeek)c.Reservation.DayOfWeek)</td>
                <td>@c.Reservation.StartTime.ToString("dd.MM.yyyy HH:mm")</td>
                <td>@c.Reservation.EndTime.ToString("HH:mm")</td>
                <td><i class="bi bi-exclamation-triangle-fill text-danger"></i> @(c.ConflictingReservation.User?.Email ?? "-")</td>
                <td>@c.ConflictingReservation.StartTime.ToString("dd.MM.yyyy HH:mm")</td>
                <td>@c.ConflictingReservation.EndTime.ToString("HH:mm")</td>
                <td><span class="badge bg-danger">@c.OverlapStart.ToString("HH:mm") - @c.OverlapEnd.ToString("HH:mm")</span></td>
            </tr>
        }
        </tbody>
    </table>
    </div>
}
else
{
    <div class="alert alert-success">No conflicting reservations found.</div>
}

<!-- SYSTEM LOGS SECTION -->
<h4 class="mt-4">System Logs</h4>
<form method="get" class="row g-2 align-items-end mb-3">
    <div class="col-auto">
        <label class="form-label mb-0">Level</label>
        <select class="form-select" name="LogLevel">
            <option value="">All</option>
            <option value="Info" selected="@(Model.LogLevel == "Info" ? "selected" : null)">Info</option>
            <option value="Warning" selected="@(Model.LogLevel == "Warning" ? "selected" : null)">Warning</option>
            <option value="Error" selected="@(Model.LogLevel == "Error" ? "selected" : null)">Error</option>
        </select>
    </div>
    <div class="col-auto">
        <label class="form-label mb-0">User</label>
        <input type="text" class="form-control" name="LogUserId" value="@Model.LogUserId" placeholder="UserId or Email" />
    </div>
    <div class="col-auto">
        <label class="form-label mb-0">Start Date</label>
        <input type="date" class="form-control" name="LogStartDate" value="@(Model.LogStartDate?.ToString("yyyy-MM-dd") ?? "")" />
    </div>
    <div class="col-auto">
        <label class="form-label mb-0">End Date</label>
        <input type="date" class="form-control" name="LogEndDate" value="@(Model.LogEndDate?.ToString("yyyy-MM-dd") ?? "")" />
    </div>
    <div class="col-auto">
        <label class="form-label mb-0">Search</label>
        <input type="text" class="form-control" name="LogSearch" value="@Model.LogSearch" placeholder="Operation or Details" />
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Filter</button>
    </div>
</form>
@if (Model.LogTotalPages > 1)
{
    <nav aria-label="Log page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.LogPage == 1 ? "disabled" : null)">
                <a class="page-link" href="?LogPage=@(Model.LogPage-1)&LogLevel=@Model.LogLevel&LogUserId=@Model.LogUserId&LogStartDate=@Model.LogStartDate:yyyy-MM-dd&LogEndDate=@Model.LogEndDate:yyyy-MM-dd&LogSearch=@Model.LogSearch">Previous</a>
            </li>
            @for (int i = 1; i <= Model.LogTotalPages; i++)
            {
                <li class="page-item @(Model.LogPage == i ? "active" : null)">
                    <a class="page-link" href="?LogPage=@i&LogLevel=@Model.LogLevel&LogUserId=@Model.LogUserId&LogStartDate=@Model.LogStartDate:yyyy-MM-dd&LogEndDate=@Model.LogEndDate:yyyy-MM-dd&LogSearch=@Model.LogSearch">@i</a>
                </li>
            }
            <li class="page-item @(Model.LogPage == Model.LogTotalPages ? "disabled" : null)">
                <a class="page-link" href="?LogPage=@(Model.LogPage+1)&LogLevel=@Model.LogLevel&LogUserId=@Model.LogUserId&LogStartDate=@Model.LogStartDate:yyyy-MM-dd&LogEndDate=@Model.LogEndDate:yyyy-MM-dd&LogSearch=@Model.LogSearch">Next</a>
            </li>
        </ul>
    </nav>
}
<div class="table-responsive">
<table class="table table-bordered align-middle text-center" style="font-size:1.05em;">
    <thead class="table-light">
        <tr>
            <th>Date</th>
            <th>User</th>
            <th>Level</th>
            <th>Operation</th>
            <th>Details</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var log in Model.LogsViewModel)
    {
        var badgeClass = log.LogLevel == "Error" ? "bg-danger" : log.LogLevel == "Warning" ? "bg-warning text-dark" : "bg-info";
        var icon = log.LogLevel == "Error" ? "bi bi-x-octagon-fill" : log.LogLevel == "Warning" ? "bi bi-exclamation-triangle-fill" : "bi bi-info-circle-fill";
        <tr class="@((log.LogLevel == "Error") ? "table-danger" : (log.LogLevel == "Warning") ? "table-warning" : "")" style="vertical-align:middle;">
            <td>@log.Date</td>
            <td><span class="fw-semibold">@log.UserEmail</span></td>
            <td><span class="badge @badgeClass px-3 py-2"><i class="@icon me-1"></i>@log.LogLevel</span></td>
            <td><span class="fw-bold">@log.Operation</span></td>
            <td style="max-width:300px; white-space:pre-line; overflow:hidden; text-overflow:ellipsis; font-size:0.95em;">
                <span title="@Html.Raw(log.Details.Replace("<br>", "\n"))" data-bs-toggle="tooltip" data-bs-html="true">
                    @Html.Raw(log.Details.Length > 120 ? log.Details.Substring(0, 120) + "..." : log.Details)
                </span>
            </td>
        </tr>
    }
    </tbody>
</table>
</div>

@section Scripts {
<script src="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const selectAll = document.getElementById('selectAllInstructors');
    const bulkEmailToInput = document.getElementById('bulkEmailToInput');
    const bulkEmailMessage = document.getElementById('bulkEmailMessage');
    const bulkEmailForm = document.getElementById('bulkEmailForm');
    const bulkEmailSendBtn = document.getElementById('bulkEmailSendBtn');

    function getCheckboxes() {
        return document.querySelectorAll('.instructor-checkbox');
    }
    function updateBulkEmailInputAndBtn() {
        const checkboxes = getCheckboxes();
        const selected = Array.from(checkboxes).filter(cb => cb.checked);
        bulkEmailToInput.value = selected.map(cb => cb.value).join(',');
        const hasMessage = bulkEmailMessage && bulkEmailMessage.value.trim().length > 0;
        bulkEmailSendBtn.disabled = selected.length === 0 || !hasMessage;
    }
    if (selectAll) {
        selectAll.addEventListener('change', function () {
            const checkboxes = getCheckboxes();
            checkboxes.forEach(cb => { cb.checked = selectAll.checked; });
            updateBulkEmailInputAndBtn();
        });
    }
    document.addEventListener('change', function (e) {
        if (e.target.classList && e.target.classList.contains('instructor-checkbox')) {
            updateBulkEmailInputAndBtn();
            if (!e.target.checked && selectAll.checked) selectAll.checked = false;
        }
    });
    if (bulkEmailMessage) {
        bulkEmailMessage.addEventListener('input', updateBulkEmailInputAndBtn);
    }
    // Form submit edilirken de inputu güncelle
    if (bulkEmailForm) {
        bulkEmailForm.addEventListener('submit', function (e) {
            updateBulkEmailInputAndBtn();
        });
    }
    // İlk yüklemede de kontrol et
    updateBulkEmailInputAndBtn();

    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.forEach(function (tooltipTriggerEl) {
        new bootstrap.Tooltip(tooltipTriggerEl);
    });

    // FullCalendar için event verisi
    var allReservations = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.AllReservations.Select(r => new {
        id = r.Id,
        title = (r.Classroom?.Name ?? "-") + " | " + (r.User?.Email ?? "-") + " | " + r.StartTime.ToString("HH:mm") + "-" + r.EndTime.ToString("HH:mm") + " (" + r.Status + ")",
        start = r.StartTime.ToString("yyyy-MM-ddTHH:mm:ssZ"),
        end = r.EndTime.ToString("yyyy-MM-ddTHH:mm:ssZ"),
        classroomId = r.ClassroomId,
        status = r.Status,
        color = r.Status == "Approved" ? "#198754" : r.Status == "Pending" ? "#ffc107" : r.Status == "Rejected" ? "#dc3545" : "#adb5bd",
        user = r.User?.Email ?? "-",
        term = r.Term?.Name ?? "-",
        note = r.AdminNote ?? ""
    })));
    console.log('allReservations:', allReservations);
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('adminCalendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            themeSystem: 'standard',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            height: 650,
            events: allReservations,
            eventDisplay: 'block',
            eventClick: function(info) {
                var ev = info.event.extendedProps;
                var modalHtml = `<div class='modal fade' id='calendarEventModal' tabindex='-1'><div class='modal-dialog'><div class='modal-content'><div class='modal-header'><h5 class='modal-title'>Reservation Details</h5><button type='button' class='btn-close' data-bs-dismiss='modal'></button></div><div class='modal-body'><b>Classroom:</b> ${info.event.title.split('|')[0]}<br><b>User:</b> ${ev.user}<br><b>Term:</b> ${ev.term}<br><b>Status:</b> ${ev.status}<br><b>Start:</b> ${info.event.start.toLocaleString()}<br><b>End:</b> ${info.event.end.toLocaleString()}<br><b>Note:</b> ${ev.note}</div></div></div></div>`;
                $(modalHtml).modal('show');
                $(document).on('hidden.bs.modal', '#calendarEventModal', function () { $(this).remove(); });
            }
        });
        calendar.render();
    });
});

// AJAX Term Add
$(document).on('click', '#addTermSubmitBtn', function (e) {
    e.preventDefault();
    var $form = $('#addTermForm');
    var data = $form.serialize();
    $.post('?handler=AddTerm', data, function (result) {
        // Başarılı ise modalı kapat, tabloyu yenile
        $('#addTermModal').modal('hide');
        location.reload(); // TODO: Partial update ile tabloyu güncelle
    }).fail(function (xhr) {
        alert('Error: ' + xhr.responseText);
    });
});

// AJAX Term Edit
$(document).on('click', '.editTermSubmitBtn', function (e) {
    e.preventDefault();
    var termId = $(this).data('term-id');
    var $form = $('#editTermForm-' + termId);
    var data = $form.serialize();
    $.post('?handler=EditTerm', data, function (result) {
        $('#editTermModal' + termId).modal('hide');
        location.reload(); // TODO: Partial update ile tabloyu güncelle
    }).fail(function (xhr) {
        alert('Error: ' + xhr.responseText);
    });
});

// AJAX User Add
$(document).on('click', '#addUserSubmitBtn', function (e) {
    e.preventDefault();
    var $form = $('#addUserForm');
    var data = $form.serialize();
    $.post('?handler=AddUser', data, function (result) {
        $('#addUserModal').modal('hide');
        location.reload();
    }).fail(function (xhr) {
        alert('Error: ' + xhr.responseText);
    });
});

// AJAX User Delete
$(document).on('submit', '.deleteUserForm', function (e) {
    e.preventDefault();
    if (!confirm('Are you sure you want to delete this user?')) return;
    var $form = $(this);
    var data = $form.serialize();
    var action = $form.attr('action') || '?handler=DeleteUser&email=' + $form.attr('asp-route-email');
    $.post(action, data, function (result) {
        location.reload();
    }).fail(function (xhr) {
        alert('Error: ' + xhr.responseText);
    });
});
</script>
} 